name: Multi-Platform CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, ubuntu-22.04]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        cpp_compiler: [g++, clang++, cl]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build C++ Runtime
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -j4

      - name: Run C++ Runtime Tests
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --verbose

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          
      - name: Build Python wheel
        if: runner.os != 'windows'
        shell: bash
        run: |
          cd ${{ github.workspace }}/python/
          pip wheel --verbose -w dist .

      - name: Install dev dependencies
        if: runner.os != 'windows'
        shell: bash

        run: |
          cd ${{ github.workspace }}/python/
          pip install .[dev]

      - name: Install Python wheel
        if: runner.os != 'windows'
        shell: bash
        run: |
          cd ${{ github.workspace }}/python/
          pip install ${{ github.workspace }}/python/dist/*.whl

      - name: Run Python Tests
        if: runner.os != 'windows'
        shell: bash
        run: |
          cd ${{ github.workspace }}/python/
          python -m pytest tests/*
